// components/NotificationBell.js
import { useEffect, useState } from "react";
import { db } from "@/lib/firebaseConfig";
import { collection, query, where, onSnapshot, orderBy } from "firebase/firestore";
import { Bell } from "lucide-react";
import { useRouter } from "next/router";
import { getAuth } from "firebase/auth";

export default function NotificationBell() {
  const [count, setCount] = useState(0);
  const [notifications, setNotifications] = useState([]);
  const router = useRouter();
  const auth = getAuth();

  useEffect(() => {
    if (!auth.currentUser) return;

    const q = query(
      collection(db, "notifications"),
      where("recipientId", "==", auth.currentUser.uid),
      where("isRead", "==", false),
      orderBy("createdAt", "desc")
    );

    const unsubscribe = onSnapshot(q, (snapshot) => {
      const newNotifs = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
      setNotifications(newNotifs);
      setCount(newNotifs.length);
    });

    return () => unsubscribe();
  }, [auth.currentUser]);

  return (
    <div className="relative cursor-pointer" onClick={() => router.push("/notifications")}>
      <Bell className="w-6 h-6" />
      {count > 0 && (
        <span className="absolute -top-1 -right-1 bg-red-500 text-white text-xs px-1 rounded-full">
          {count}
        </span>
      )}
    </div>
  );
}